apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: hass
    app.kubernetes.io/name: home-assistant
  name: hass-home-assistant
  namespace: hass
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: hass
      app.kubernetes.io/name: home-assistant
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: hass
        app.kubernetes.io/name: home-assistant
    spec:
      automountServiceAccountToken: true
      containers:
        - env:
            - name: spotcast_sp_dc
              valueFrom:
                secretKeyRef:
                  key: sp_dc
                  name: spotcast-secrets
            - name: spotcast_sp_key
              valueFrom:
                secretKeyRef:
                  key: sp_key
                  name: spotcast-secrets
            - name: TZ
              value: UTC
          image: ghcr.io/home-assistant/home-assistant:2025.04.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8123
            timeoutSeconds: 1
          name: hass-home-assistant
          ports:
            - containerPort: 8123
              name: http
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8123
            timeoutSeconds: 1
          resources: {}
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
                - SYS_ADMIN
            privileged: true
          startupProbe:
            failureThreshold: 30
            periodSeconds: 5
            successThreshold: 1
            tcpSocket:
              port: 8123
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /hass-configs
              name: hass-configs
            - mountPath: /hass-secrets
              name: hass-secrets
            - mountPath: /hass-themes
              name: hass-themes
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      initContainers:
        - env:
            - name: CONFIG_SUBDIRS
              value: "automations,themes"
            - name: CLONE_CACHE_DIR
              value: /config/tmp/git_clones
            - name: TARGET_DIR
              value: /config
            - name: REPO_DATA_FILE
              value: /configs/repo_data.yaml
            - name: SCRIPT_PATH
              value: /scripts
          command:
            - /bin/sh
            - /scripts/init-hass.sh
          image: python:3
          imagePullPolicy: IfNotPresent
          name: copy
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /scripts/
              name: init-scripts
            - mountPath: /config
              name: config
            - mountPath: /automations/
              name: hass-automations
            - mountPath: /configs/
              name: hass-configs
            - mountPath: /themes/
              name: hass-themes
            - mountPath: /secrets/
              name: hass-secrets
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: hass-home-assistant-config
        - configMap:
            defaultMode: 420
            name: init-scripts
          name: init-scripts
        - configMap:
            defaultMode: 420
            name: hass-configs
          name: hass-configs
        - configMap:
            defaultMode: 420
            name: hass-automations
          name: hass-automations
        - name: hass-secrets
          secret:
            defaultMode: 420
            secretName: hass-secrets
        - configMap:
            defaultMode: 420
            name: hass-themes
          name: hass-themes
