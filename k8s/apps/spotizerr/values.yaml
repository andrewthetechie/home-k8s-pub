controllers:
  redis:
    containers:
      redis:
        image:
          repository: redis
          tag: 7.4.2-alpine
  spotizerr:
    strategy: RollingUpdate
    # initContainers:
    #   config-copy:
    #     image:
    #       repository: mikefarah/yq
    #       tag: 4.45.1
    #     securityContext:
    #       runAsUser: 0
    #       runAsGroup: 1000
    #       allowPrivilegeEscalation: False
    #     command:
    #       - /bin/sh
    #       - -c
    #       - yq -o json /config/main.yaml > /app/config/main.json &&
    #         chown -R 1000:1000 /app/config
    containers:
      app:
        image:
          repository: cooldockerizer93/spotizerr
          tag: 3.1.0
        env:
          REDIS_HOST: "spotizerr-redis.piracy.svc"
          REDIS_PORT: 6379
          REDIS_DB: 0
          REDIS_URL: redis://spotizerr-redis.piracy.svc:6379/0
          REDIS_BACKEND: redis://spotizerr-redis.piracy.svc:6379/0
        # command:
        #   - /bin/sh
        #   - -c
        #   - mkdir -p /app/creds/spotify/MyAccount/ && cp /secrets/*.json /app/creds/spotify/MyAccount/ &&
        #     mkdir -p /app/prgs &&
        #     chown -R 1000:1000 /app/prgs &&
        #     chmod +x /app/entrypoint.sh &&
        #     /app/entrypoint.sh python app.py
service:
  spotizerr:
    controller: spotizerr
    ports:
      http:
        port: 7171
  redis:
    controller: redis
    ports:
      redis:
        port: 6379

ingress:
  spotizerr:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Piracy
      gethomepage.dev/icon: spotify
      gethomepage.dev/name: Spotify Downloader
      gethomepage.dev/description: Download albums or playlists from spotify to the Nas
      uptimekuma.io/monitor: "true"
      uptimekuma.io/name: "Spotifzerr"
      uptimekuma.io/type: "http"
      uptimekuma.io/interval: "120"
    hosts:
      - host: spotdl.herrington.services
        paths:
          - path: /
            service:
              identifier: spotizerr
              port: http
    tls:
      - secretName: spotizerr
        hosts:
          - spotdl.herrington.services

persistence:
  config:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    advancedMounts:
      spotizerr:
        app:
          - path: /app/data
  queue:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 2Gi
    advancedMounts:
      redis:
        redis:
          - path: /data
  credentials:
    type: secret
    name: spotizerr-spotify-credentials
    globalMounts:
      - path: /secrets
  config-map:
    type: configMap
    name: configuration
    globalMounts:
      - path: /config
