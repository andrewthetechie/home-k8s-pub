apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    configmap.reloader.stakater.com/reload: "zigbee2mqtt-settings"
  labels:
    app.kubernetes.io/instance: zigbee2mqtt
    app.kubernetes.io/name: zigbee2mqtt
  name: zigbee2mqtt
  namespace: zigbee2mqtt
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: zigbee2mqtt
      app.kubernetes.io/name: zigbee2mqtt
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: zigbee2mqtt
        app.kubernetes.io/name: zigbee2mqtt
    spec:
      automountServiceAccountToken: true
      initContainers:
        - command:
          - /bin/sh
          - -c
          - cp /configs/configuration.yaml /data/
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          name: copy
          volumeMounts:
          - mountPath: /data
            name: data
          - mountPath: /configs/
            name: zigbee2mqtt-settings
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            privileged: false
            runAsNonRoot: false
            seccompProfile:
              type: RuntimeDefault
      containers:
      - image: koenkk/zigbee2mqtt:1.42.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        name: zigbee2mqtt
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          runAsNonRoot: false
          seccompProfile:
            type: RuntimeDefault
        startupProbe:
          failureThreshold: 30
          periodSeconds: 5
          successThreshold: 1
          tcpSocket:
            port: 8080
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /app/data
          name: data
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          name: zigbee2mqtt-settings
        name: zigbee2mqtt-settings
      - name: data
        persistentVolumeClaim:
          claimName: zigbee2mqtt