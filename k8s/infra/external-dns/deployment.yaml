apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: "external-dns"
  labels:
    app.kubernetes.io/instance: external-dns
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: external-dns
    helm.sh/chart: external-dns-6.24.3
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: external-dns
      app.kubernetes.io/name: external-dns
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: external-dns
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: external-dns
        helm.sh/chart: external-dns-6.24.3
    spec:
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
      serviceAccountName: external-dns
      containers:
        - name: external-dns
          image: docker.io/bitnami/external-dns:0.13.6-debian-11-r0
          imagePullPolicy: "IfNotPresent"
          args:
            # Generic arguments
            - --metrics-address=:7979
            - --log-level=info
            - --log-format=text
            - --domain-filter=nauvoo.herrington.services
            - --domain-filter=herrington.services
            - --policy=upsert-only
            - --provider=pihole
            - --registry=noop
            - --interval=1m
            - --txt-owner-id=nauvoo
            - --source=service
            - --source=ingress
              # Extra arguments
            - --pihole-server=https://1.pihole.herrington.services/
          envFrom:
            - secretRef:
                name: pihole-password
          ports:
            - name: http
              containerPort: 7979
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            limits: {}
            requests: {}

