controllers:
  pihole:
    strategy: RollingUpdate
    containers:
      app:
        image:
          repository: pihole/pihole
          tag: 2024.07.0
          pullPolicy: IfNotPresent
        env:
          TZ: America/Chicago

persistence:
  etc-pihole:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /etc/pihole
  etc-dnsmasq:
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /etc/dnsmasq.d

service:
  pihole-dns:
    controller: pihole
    type: LoadBalancer
    loadBalancerIP: 10.10.98.253
    ports:
      dns-tcp:
        port: 53
        protocol: TCP
      dns-udp:
        port: 53
        protocol: UDP
  pihole-http:
    controller: pihole
    ports:
      http:
        port: 80
        protocol: HTTP

ingress:
  pihole:
    enabled: true
    className: nginx
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      gethomepage.dev/description: DNS Filtering - Backup
      gethomepage.dev/enabled: "true"
      gethomepage.dev/group: Infra
      gethomepage.dev/icon: si-pihole
      gethomepage.dev/name: Pihole Backup
      uptimekuma.io/monitor: "true"
      uptimekuma.io/name: "Pihole Backup"
      uptimekuma.io/type: "http"
      uptimekuma.io/interval: "120"
    hosts:
      - host: 2.pihole.herrington.services
        paths:
          - path: /
            service:
              identifier: pihole-http
              port: http
    tls:
      - secretName: pihole
        hosts:
          - 2.pihole.herrington.services
